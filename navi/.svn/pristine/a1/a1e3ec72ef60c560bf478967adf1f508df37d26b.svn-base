package kr.or.navi.vo;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.List;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;

import org.springframework.format.annotation.DateTimeFormat;

import lombok.Data;
import lombok.EqualsAndHashCode;

@Data
@EqualsAndHashCode(of="proId")
public class ProjectVO implements Serializable{
	private int rnum;
	private String proId;
	@NotBlank
	private String proStId;
	@NotBlank
	private String proName;
	private String proDesc;
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
	private LocalDateTime proRegDt;
	@NotNull
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm")
	private LocalDateTime proDdlineEx;
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
	private LocalDateTime proDdlineDt;
	private String proDdlineYn;
	private String empId;
	private String empName;
	private String cmId;
	private String cmName;
	private List<TeamVO> teamList;
	
	public boolean isPLMember(EmpVO emp) {
		return emp.getEmpId().equals(this.empId);
	}
	
	public Object getProRegDtStr() {
		if(proRegDt!=null)
		return proRegDt.format(DateTimeFormatter.ISO_DATE);
		return proRegDt;
	}
	public Object getProDdlineExStr() {
		if(proDdlineEx!=null)
		return proDdlineEx.format(DateTimeFormatter.ISO_DATE);
		return proDdlineEx;
	}
	public Object getRealProRegDtStr() {
		if(proRegDt!=null)
		return proRegDt.format(DateTimeFormatter.ISO_DATE_TIME);
		return proRegDt;
	}
	public Object getRealProDdlineExStr() {
		if(proDdlineEx!=null)
		return proDdlineEx.format(DateTimeFormatter.ISO_DATE_TIME);
		return proDdlineEx;
	}
	public Object getIngProjectDT() {
		if(proRegDt!=null && proDdlineEx!=null)
		return ChronoUnit.DAYS.between(proRegDt, proDdlineEx)+"Ïùº";
		return null;
	}
}
