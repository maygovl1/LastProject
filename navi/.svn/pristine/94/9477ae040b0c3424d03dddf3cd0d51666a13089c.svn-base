<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.navi.todaylist.dao.TodayListDAO">

<!-- 일  -->

<resultMap type="TaskVO" id="taskMap" autoMapping="true">
		<id property="taskId" column="TASK_ID" />
		<association property="taskProcessStatus" javaType="TaskProcessStatusVO" autoMapping="true">
	    	<id property="tpsId" column="TPS_ID"/>
	    </association>
	    <association property="taskStatus" javaType="TaskStatusVO" autoMapping="true">
	    	<id property="tsId" column="TS_ID"/>
	    </association>
	    <association property="projectVO" javaType="ProjectVO" autoMapping="true">
	    	<id property="proId" column="PROD_ID"/>
	    </association>
	    <association property="empVO" javaType="EmpVO" autoMapping="true">
	    	<id property="empId" column="EMP_ID"/>
	    </association>
</resultMap>

<sql id="searchFrag">
    <trim suffixOverrides="AND">
        <if test="not paging.detailCondition.empty">
            AND
            <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(paging.detailCondition.ts)">
                TASK.ts_id = '${paging.detailCondition.ts}' AND 
            </if>
         	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(paging.detailCondition.tps)">
                TASK.tps_id = '${paging.detailCondition.tps}' AND 
            </if>
          	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(paging.detailCondition.word)">
                INSTR(TASK.task_title, '${paging.detailCondition.word}') > 0 
                OR
                INSTR(TASK.task_id, '${paging.detailCondition.word}') > 0 
                OR
                INSTR(PROJECT.pro_name, '${paging.detailCondition.word}') > 0 
            </if> 
        </if>
    </trim>
</sql>

<!-- 이미추가된 일감 제거하는 조건 넣기  -->
<select id="selectTaskList" resultMap="taskMap" parameterType="PaginationInfo">
		SELECT 
			ROWNUM AS RNUM,
		    TASK.task_id,
		    TASK.ts_id,
		    TASK.pro_id,
		    TASK.task_man_id,
		    TASK.task_top_id,
		    TASK.tps_id,
		    TASK.task_reg_id,
		    TASK.task_title,
		    TASK.task_reg_dt,
		    TASK.task_ddline_dt,
		    TASK.task_mod_dt,
		    TASK.task_cn,
		    TASK.task_rqrd,
		    TASK.task_est_time,
		    TASK.task_comp_dt,
		    TASK.task_del_dt,
		    PROJECT.PRO_NAME,
		    TS.TS_NAME,
		    TS.TS_TIME,
		    TPS.TPS_NAME,
		    TPS.TPS_ING,
		    TPS.TPS_DESC,
            EMP.EMP_NAME
		FROM
		    TASK 
		JOIN 
		    PROJECT ON TASK.PRO_ID = PROJECT.PRO_ID
		JOIN 
		    TASK_STATUS TS ON TASK.ts_id = TS.TS_ID
		JOIN 
		    TASK_PROCESS_STATUS TPS ON TASK.TPS_ID = TPS.TPS_ID
		JOIN 
			EMP ON TASK.task_man_id = EMP.EMP_ID
		WHERE 
		    TASK.TASK_MAN_ID=#{taskManId}
		<include refid="searchFrag" /> 
		
</select>

	
<select id="selectTaskListTotalRecord">

	WITH JTASK AS (
	
		 SELECT 
			ROWNUM AS RNUM,
		    TASK.task_id,
		    TASK.ts_id,
		    TASK.pro_id,
		    TASK.task_man_id,
		    TASK.task_top_id,
		    TASK.tps_id,
		    TASK.task_reg_id,
		    TASK.task_title,
		    TASK.task_reg_dt,
		    TASK.task_ddline_dt,
		    TASK.task_mod_dt,
		    TASK.task_cn,
		    TASK.task_rqrd,
		    TASK.task_est_time,
		    TASK.task_comp_dt,
		    TASK.task_del_dt,
		    PROJECT.PRO_NAME,
		    TS.TS_NAME,
		    TS.TS_TIME,
		    TPS.TPS_NAME,
		    TPS.TPS_ING,
		    TPS.TPS_DESC,
            EMP.EMP_NAME
		FROM
		    TASK 
		JOIN 
		    PROJECT ON TASK.PRO_ID = PROJECT.PRO_ID
		JOIN 
		    TASK_STATUS TS ON TASK.ts_id = TS.TS_ID
		JOIN 
		    TASK_PROCESS_STATUS TPS ON TASK.TPS_ID = TPS.TPS_ID
		JOIN 
			EMP ON TASK.task_man_id = EMP.EMP_ID
		WHERE 
		    TASK.TASK_MAN_ID=#{taskManId}
		  <include refid="searchFrag" />  
	)

	        
 	SELECT COUNT(*) FROM JTASK
</select>

<!-- 오늘의 일정 테이블에 데이터 추가하기  -->
<insert id="insertTdList" parameterType="TodayListVO">
INSERT INTO TODAY_LIST 
	(tl_reg_dt
	, task_id
	, emp_id)
	VALUES (
	SYSTIMESTAMP
	, #{taskId}
	, #{empId}
	)
</insert>
<!-- 오늘의 일정 데이터 삭제하기  -->
<delete id="deleteTdList" parameterType="TodayListVO">
DELETE FROM TODAY_LIST 
WHERE TASK_ID = #{taskId}
</delete>



<!-- 일감 업데이트 : 일감 taskDAO에서 가져와? -->

<!-- 오늘의 일정 조회 테이블 TASK.TASK_ID=#{taskId} -->
<select id="selectTodayList" resultMap="taskMap">
SELECT 
        ROWNUM AS RNUM,
        TASK.task_id,
        TASK.ts_id,
        TASK.pro_id,
        TASK.task_man_id,
        TASK.task_top_id,
        TASK.tps_id,
        TASK.task_reg_id,
        TASK.task_title,
        TASK.task_reg_dt,
        TASK.task_ddline_dt,
        TASK.task_mod_dt,
        TASK.task_cn,
        TASK.task_rqrd,
        TASK.task_est_time,
        TASK.task_comp_dt,
        TASK.task_del_dt,
        PROJECT.PRO_NAME,
        TS.TS_NAME,
        TS.TS_TIME,
        TPS.TPS_NAME,
        TPS.TPS_ING,
        TPS.TPS_DESC,
        EMP.EMP_NAME
    FROM
        TASK 
    JOIN 
        PROJECT ON TASK.PRO_ID = PROJECT.PRO_ID
    JOIN 
        TASK_STATUS TS ON TASK.ts_id = TS.TS_ID
    JOIN 
        TASK_PROCESS_STATUS TPS ON TASK.TPS_ID = TPS.TPS_ID
    JOIN 
        EMP ON TASK.task_man_id = EMP.EMP_ID
    WHERE 
    TASK.TASK_ID = #{taskId}
</select>

	<!-- 2) 오늘의 일정 예상시간, 소요시간, 작업상태 업데이트 쿼리 -->
</mapper>