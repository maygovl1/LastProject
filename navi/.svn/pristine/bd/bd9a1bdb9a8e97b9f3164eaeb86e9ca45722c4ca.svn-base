package kr.or.navi.project.service;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import kr.or.navi.common.paging.PaginationInfo;
import kr.or.navi.project.dao.IssueDAO;
import kr.or.navi.project.dao.ProjectDAO;
import kr.or.navi.vo.EmpVO;
import kr.or.navi.vo.FileSaveVO;
import kr.or.navi.vo.IssueVO;
import kr.or.navi.vo.ProjectVO;
import kr.or.navi.vo.TeamVO;

@Service
public class ProjectServiceImple implements ProjectService {
	@Inject
	private ProjectDAO projectDao;
	@Inject
	private IssueDAO issueDao;
	@Override
	public List<ProjectVO> projectList(PaginationInfo paging) {
		int totalRecord = projectDao.selectTotalRecord(paging);
		paging.setTotalRecord(totalRecord);
		return projectDao.selectList(paging);
	}
	@Override
	public List<IssueVO> issueList(String proId,PaginationInfo paging) {
		int totalRecord = issueDao.selectTotalRecord(proId,paging);
		paging.setTotalRecord(totalRecord);
		return issueDao.selectIssueList(proId, paging);
	}
	@Override
	public ProjectVO projectOne(String proId) {
		ProjectVO projectVO = projectDao.selectProject(proId);
		//팀원들 조회를 여기서...할것.
		return projectVO;
	}
	@Override
	public boolean authPL(EmpVO vo,ProjectVO project) {
			//코딩 가이드 필요라인
			return project.isPLMember(vo);
	}
	@Override
	public int modifyProject(ProjectVO project) {
		return projectDao.updateProject(project);
	}
	@Override
	public int projectDelete(ProjectVO project) {
		return projectDao.deleteProject(project);
	}
	@Override
	public int createProject(ProjectVO project,String empIds,String roleIds, EmpVO realUser) {
		try {
			int cnt = projectDao.insertProject(project);
			String[] empArr = empIds.split(",");
			String[] roleArr = roleIds.split(",");
			if(cnt>0) {
				FileSaveVO vo = new FileSaveVO();
				vo.setProId(projectDao.selectMaxProjectId());
				vo.setFsId(projectDao.selectMaxFileSaveId());
				int fcnt = projectDao.insertFileSave(vo);
				String empId = realUser.getEmpId();
				projectDao.insertTeam(empId, "ROLE_PL");
				for(int i=0;i<empArr.length;i++) {
					projectDao.insertTeam(empArr[i].trim(), roleArr[i].trim());
				}
				cnt+=fcnt;
			}
			return cnt;
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}
	@Override
	public List<EmpVO> selectPlList() {
		return projectDao.selectPlList();
	}
	@Override
	public List<EmpVO> selectEmpList() {
		return projectDao.selectEmpList();
	}
}
