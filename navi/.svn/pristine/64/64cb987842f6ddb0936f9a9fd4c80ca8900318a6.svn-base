package kr.or.navi.vo;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.List;

import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.format.annotation.DateTimeFormat.ISO;
import org.springframework.web.multipart.MultipartFile;

import lombok.Data;
import lombok.EqualsAndHashCode;

@Data
@EqualsAndHashCode(of="empId")
public class EmpVO implements Serializable{
	private String empId;
	private String deptId;
	private String deptName;
	private String psId;
	private String psName;
	private String roleId;
	private String cnId;
	private String empImg;
	private String empName;
	private Integer empAge;
	private String empGen;
	private String empPass;
	private String empRrno;
	private String empPhone;
	private String empTel;
	private String empZip;
	private String empAddr;
	private String empAddr2;
	private String empMail;
	@DateTimeFormat(iso = ISO.DATE_TIME)
	private LocalDateTime empCmpYmd;
	private Integer empCareer;
	private LocalDateTime empQuitDt;
	private String empLimitYn;
	private String empBkId;
	private String empFmId;
	private Integer empCertCg;

	private List<String> empRoles; // Team 테이블의 Role ID 리스트
	private List<ProjectVO> projectList;
	public String getEmpGenStr() {
		if (("F").equals(empGen)) {
	        return "여자";
	    } else if (("M").equals(empGen)) {
	        return "남자";
	    } else {
	        return "알 수 없음"; // 예외 처리: F나 M이 아닌 다른 값일 경우
	    }
	}
	public String getEmpCmpYmdStr() {
		if(empCmpYmd!=null)
			return empCmpYmd.format(DateTimeFormatter.ISO_DATE);
		return null;
		
	}

	
}
