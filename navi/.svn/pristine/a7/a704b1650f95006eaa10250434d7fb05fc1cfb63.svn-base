package kr.or.navi.chat.web.controller;

import java.util.List;
import java.util.Map;
import java.util.Objects;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.navi.chat.web.service.ChatService;
import kr.or.navi.security.RealUser;
import kr.or.navi.vo.EmpVO;
import kr.or.navi.vo.LoginVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/chat")
public class ChatController {
	
	@Inject
	ChatService service;
	
	@ResponseBody
	@PostMapping("/login")
	public String chatPw(@RealUser EmpVO realUser, @RequestBody Map<String, String> requestBody) {
		String pass = realUser.getEmpPass();
		String password = requestBody.get("password");
	    // requestBody를 직접 처리
	    if(Objects.equals(pass, password)) {
	        return "ok";
	    }
	    return "fail";
	}


	/**
	 * 웹 소켓 메신저 메인화면(대화상대 리스트화면)으로 이동한다.
	 *
	 * @param session 사용자세션
	 * @param model   모델
	 * @return view name
	 */
	@GetMapping(value = "/chatEmpList")
	public String websocketMessengerMain(
			@RealUser EmpVO realUser, Model model
	) {
		String empId = realUser.getEmpId();
		model.addAttribute("empId", empId);
		String empName = realUser.getEmpName();
		model.addAttribute("empName", empName);
		String deptName = realUser.getDeptName();
		model.addAttribute("deptName", deptName);
		String psName = realUser.getPsName();
		model.addAttribute("psName", psName);
		
		return "chat/chatEmpList";
	}

	@ResponseBody	
	@PostMapping("/chatEmpList")
	public List<EmpVO> chatEmpList(@RealUser EmpVO realUser, Model model ) {
		List<EmpVO> chatEmpList = service.chatEmpList(realUser.getEmpId());
		model.addAttribute("chatEmpList", chatEmpList);
		return chatEmpList;
	}
	
	/**
	 * 대화창을 새로 띄운다.
	 *
	 * @param roomId   대화창 아이디
	 * @param username 대화상대 이름
	 * @param session  사용자세션
	 * @param model    모델
	 * @return view name
	 */
	@RequestMapping(value = "chat/chatRoom")
	public String websocketMessengePopup(
			@RequestParam(value = "roomId") String roomId,
			@RequestParam(value = "username") String username,
			HttpSession session,
			ModelMap model
	) {
		model.addAttribute("loginVO", session.getAttribute("loginVO"));
		model.addAttribute("roomId", roomId);
		model.addAttribute("username", username);

		return "chat/popup/chatRoom";
	}
	

//
//	@RequestMapping(value = "/chat/session.do")
//	public String websocketSession(
//
//			HttpSession session, ModelMap model, @RealUser EmpVO emp
//
//	) {
//
//		LoginVO loginVO = new LoginVO();
//		loginVO.setId(emp.getEmpId());
//		loginVO.setPassword("raHLBnHFcunwNzcDcfad4PhD11hHgXSUr7fc1Jk9uoQ=");
//		loginVO.setUserSe("USR");
//		loginVO.setEmail("egovframe@nia.or.kr");
//		loginVO.setIhidNum("");
//		loginVO.setName(String.format("쳇_%s", loginVO.getId()));
//		loginVO.setOrgnztId("ORGNZT_0000000000000");
//		loginVO.setUniqId("USRCNFRM_00000000000");
//
//		session.setAttribute("loginVO", loginVO);
//
//		return "chat/blank";
//	}

}